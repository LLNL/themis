# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
before_script:
- env
stages:
- static analysis
- test

black_on-commit:
  stage: static analysis
  rules:
  - if: '$CI_PIPELINE_SOURCE == "schedule"'
    when: never
  - if: '$CI_COMMIT_BRANCH == "main"'
  allow_failure: true
  tags:
    - shell
    - borax
  script:
    - files=$(git diff-tree --no-commit-id --name-only -r $CI_COMMIT_SHA)
    - if [ ! -z "${files}" ]; then pythonfiles=$(find $files -type f \( -name "*.py" -print -o -exec awk ' /^#!.*python/{print FILENAME} {nextfile}' {} + \)); fi
    - echo $files
    - echo $pythonfiles
    - email=$(git show -s --format='%ae' $CI_COMMIT_SHA)
    - echo $email
    - source /usr/WS1/vandv/gitlab/static_analysis_env/bin/activate
    - if [ ! -z "${pythonfiles}" ]; then black --diff $pythonfiles 1> black_diff.txt 2> black_report.txt || true && echo "Black Results for Commit $CI_COMMIT_SHA" | mail -a black_diff.txt -a black_report.txt -s "UQP On-Commit Black Report" $email; else echo "No python files for Black analysis" > black_report.txt; fi
    - deactivate
  artifacts:
    when: always
    paths:
      - black_report.txt

black_monthly:
  stage: static analysis
  rules:
  - if: '$MONTHLY == "TRUE"'
  allow_failure: true
  tags:
    - shell
    - borax
  script:
    - pythonfiles=$(find core -type f \( -name "*.py" -print -o -exec awk ' /^#!.*python/{print FILENAME} {nextfile}' {} + \))
    - echo $pythonfiles
    - email="healy22@llnl.gov domyancic1@llnl.gov"
    - echo $email
    - source /usr/WS1/vandv/gitlab/static_analysis_env/bin/activate
    - if [ ! -z "${pythonfiles}" ]; then black --diff $pythonfiles 1> black_diff.txt 2> black_report.txt || true && echo "Black Results" | mail -a black_diff.txt -a black_report.txt -s "Monthly UQP Black Report" $email; else echo "No python files for Black analysis" > black_report.txt; fi
    - deactivate
  artifacts:
    when: always
    paths:
      - black_report.txt


".run_test":
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
  - if: $CI_COMMIT_BRANCH == "branch"
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
  - if [[ $HOSTNAME =~ "borax" ]]; then
      ./tests/run_tests.sh unit integration -- -vvf 2>&1
      python3 ./.gitlab/generateJenkinsXmlFromJson.py combined_results.json borax_results.xml Components;
    elif [[ $HOSTNAME =~ "quartz" ]]; then 
      ./tests/run_tests.sh unit integration -- -vvf 2>&1 
      python3 ./.gitlab/generateJenkinsXmlFromJson.py combined_results.json quartz_results.xml Components;
    fi || true
  artifacts:
    reports:
      junit: "*_results.xml"

".on_borax":
  tags:
  - borax
  - shell

".on_quartz":
  tags:
  - quartz
  - shell

test_borax:
  image: python:3.6
  stage: test
  coverage: "/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/"
  extends:
  - ".run_test"
  - ".on_borax"
test_quartz:
  image: python:3.6
  stage: test
  coverage: "/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/"
  extends:
  - ".run_test"
  - ".on_quartz"
  
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml